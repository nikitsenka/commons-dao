/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables;

import com.epam.ta.reportportal.jooq.Indexes;
import com.epam.ta.reportportal.jooq.JPublic;
import com.epam.ta.reportportal.jooq.Keys;
import com.epam.ta.reportportal.jooq.tables.records.JWidgetOptionRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JWidgetOption extends TableImpl<JWidgetOptionRecord> {

    private static final long serialVersionUID = 398756612;

    /**
     * The reference instance of <code>public.widget_option</code>
     */
    public static final JWidgetOption WIDGET_OPTION = new JWidgetOption();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JWidgetOptionRecord> getRecordType() {
        return JWidgetOptionRecord.class;
    }

    /**
     * The column <code>public.widget_option.id</code>.
     */
    public final TableField<JWidgetOptionRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('widget_option_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.widget_option.widget_id</code>.
     */
    public final TableField<JWidgetOptionRecord, Long> WIDGET_ID = createField("widget_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.widget_option.option</code>.
     */
    public final TableField<JWidgetOptionRecord, String> OPTION = createField("option", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.widget_option.value</code>.
     */
    public final TableField<JWidgetOptionRecord, String> VALUE = createField("value", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * Create a <code>public.widget_option</code> table reference
     */
    public JWidgetOption() {
        this(DSL.name("widget_option"), null);
    }

    /**
     * Create an aliased <code>public.widget_option</code> table reference
     */
    public JWidgetOption(String alias) {
        this(DSL.name(alias), WIDGET_OPTION);
    }

    /**
     * Create an aliased <code>public.widget_option</code> table reference
     */
    public JWidgetOption(Name alias) {
        this(alias, WIDGET_OPTION);
    }

    private JWidgetOption(Name alias, Table<JWidgetOptionRecord> aliased) {
        this(alias, aliased, null);
    }

    private JWidgetOption(Name alias, Table<JWidgetOptionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> JWidgetOption(Table<O> child, ForeignKey<O, JWidgetOptionRecord> key) {
        super(child, key, WIDGET_OPTION);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JPublic.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WIDGET_OPTION_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<JWidgetOptionRecord, Long> getIdentity() {
        return Keys.IDENTITY_WIDGET_OPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JWidgetOptionRecord> getPrimaryKey() {
        return Keys.WIDGET_OPTION_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JWidgetOptionRecord>> getKeys() {
        return Arrays.<UniqueKey<JWidgetOptionRecord>>asList(Keys.WIDGET_OPTION_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<JWidgetOptionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<JWidgetOptionRecord, ?>>asList(Keys.WIDGET_OPTION__WIDGET_OPTION_WIDGET_ID_FKEY);
    }

    public JWidget widget() {
        return new JWidget(this, Keys.WIDGET_OPTION__WIDGET_OPTION_WIDGET_ID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JWidgetOption as(String alias) {
        return new JWidgetOption(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JWidgetOption as(Name alias) {
        return new JWidgetOption(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JWidgetOption rename(String name) {
        return new JWidgetOption(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JWidgetOption rename(Name name) {
        return new JWidgetOption(name, null);
    }
}
